AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.7
    Layers:
      - !Ref BrwyattLayer
    Environment:
      Variables:
        API_DOMAIN: !Ref ApiDomain
        LOGLEVEL: !Ref LogLevel
        STAGE: !Ref Stage
        WEB_DOMAIN: !Ref WebDomain

Parameters:
  Stage:
    Type: String
    AllowedValues:
      - Beta
      - Gamma
      - Prod
    Default: Beta
    Description: Stage that can be added to resource names
  ApiDomain:
    Type: String
    Default: 'api.brwyatt.net'
    Description: API domain name
  WebDomain:
    Type: String
    Default: 'brwyatt.net'
    Description: Web UI domain name
  LogLevel:
    Type: String
    Default: 'DEBUG'
    Description: Lambda Logging Level

Resources:
  BrwyattWeb:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub 'Brwyatt-Web-${Stage}'
      StageName: !Ref Stage
      BinaryMediaTypes:
        - '*~1*'
      Variables:
        Stage: !Ref Stage
        HostName: !Ref WebDomain

  BrwyattApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub 'Brwyatt-API-${Stage}'
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'GET,OPTIONS'"
        AllowOrigin: !Sub "'https://${WebDomain}'"
      Variables:
        Stage: !Ref Stage
        HostName: !Ref ApiDomain

  WebMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: BrwyattWebStage
    Properties:
      BasePath: ''
      DomainName: !Ref WebDomain
      RestApiId: !Ref BrwyattWeb
      Stage: !Ref Stage

  ApiMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: BrwyattApiStage
    Properties:
      BasePath: ''
      DomainName: !Ref ApiDomain
      RestApiId: !Ref BrwyattApi
      Stage: !Ref Stage

  AltNameWebRedirectBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${WebDomain}-redirector'
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref WebDomain
          Protocol: 'https'

  BrwyattLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub 'Brwyatt-${Stage}'
      Description: Code for brwyatt.net
      ContentUri: build/
      RetentionPolicy: Delete
      CompatibleRuntimes:
        - python3.7

  BrwyattStaticLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub 'BrwyattStatic-${Stage}'
      Description: Static code assets for brwyatt.net - CSS, JS
      ContentUri: staticbuild/
      RetentionPolicy: Delete
      CompatibleRuntimes:
        - python3.7

  BrwyattTemplatesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub 'BrwyattTemplates-${Stage}'
      Description: Jinja2 Templates for brwyatt.net
      ContentUri: templatesbuild/
      RetentionPolicy: Delete
      CompatibleRuntimes:
        - python3.7

  PageContent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get_pagecontent.handler
      CodeUri: lambda/api/get_pagecontent.py
      Policies: AWSLambdaBasicExecutionRole
      Layers:
        - !Ref BrwyattTemplatesLayer
      Environment:
        Variables:
          TEMPLATE_PATH: '/opt/templates'
      Events:
        PageContent:
          Type: Api
          Properties:
            RestApiId: !Ref BrwyattApi
            Path: /pages/content
            Method: GET

  RenderPage:
    Type: AWS::Serverless::Function
    Properties:
      Handler: page_renderer.handler
      CodeUri: lambda/web/page_renderer.py
      Policies: AWSLambdaBasicExecutionRole
      Layers:
        - !Ref BrwyattTemplatesLayer
      Environment:
        Variables:
          TEMPLATE_PATH: '/opt/templates'
      Events:
        root:
          Type: Api
          Properties:
            RestApiId: !Ref BrwyattWeb
            Path: '/'
            Method: GET
        proxy:
          Type: Api
          Properties:
            RestApiId: !Ref BrwyattWeb
            Path: '/{resource+}'
            Method: GET

  SignIn:
    Type: AWS::Serverless::Function
    Properties:
      Handler: signin.handler
      CodeUri: lambda/web/signin.py
      Policies: AWSLambdaBasicExecutionRole
      Events:
        root:
          Type: Api
          Properties:
            RestApiId: !Ref BrwyattWeb
            Path: '/signin'
            Method: GET

  SignOut:
    Type: AWS::Serverless::Function
    Properties:
      Handler: signout.handler
      CodeUri: lambda/web/signout.py
      Policies: AWSLambdaBasicExecutionRole
      Events:
        root:
          Type: Api
          Properties:
            RestApiId: !Ref BrwyattWeb
            Path: '/signout'
            Method: GET

  StaticContent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fetch_static.handler
      CodeUri: lambda/web/fetch_static.py
      Policies: AWSLambdaBasicExecutionRole
      Layers:
        - !Ref BrwyattStaticLayer
        - !Ref BrwyattTemplatesLayer
      Environment:
        Variables:
          STATIC_PATH: '/opt/static'
          TEMPLATE_PATH: '/opt/templates'
      Events:
        {{static_events}}

Outputs:
  ApiUrl:
    Description: URL for application API
    Value: !Sub 'https://${ApiDomain}/'
    Export:
      Name: !Sub 'ApiUrl-${Stage}'
  WebUrl:
    Description: URL for application UI
    Value: !Sub 'https://${WebDomain}/'
    Export:
      Name: !Sub 'WebUrl-${Stage}'

# vim: ts=2 sts=2 sw=2 expandtab
